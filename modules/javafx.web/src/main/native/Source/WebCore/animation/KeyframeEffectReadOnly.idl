/*
 * Copyright (C) 2018 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

[
    EnabledAtRuntime=WebAnimations,
    Exposed=Window,
    JSGenerateToNativeObject,
    ConstructorMayThrowException,
    ConstructorCallWith=ScriptState,
    Constructor(Element? target, object? keyframes, optional (unrestricted double or KeyframeEffectOptions) options),
    Constructor(KeyframeEffectReadOnly source)
] interface KeyframeEffectReadOnly : AnimationEffectReadOnly {
    readonly attribute Element? target;
    readonly attribute IterationCompositeOperation iterationComposite;
    readonly attribute CompositeOperation composite;
    [CallWith=ScriptState] sequence<object> getKeyframes();
};

dictionary BasePropertyIndexedKeyframe {
    (sequence<double?> or double?) offset = [];
    (sequence<DOMString> or DOMString) easing = [];
    (sequence<CompositeOperation?> or CompositeOperation?) composite = [];
};

dictionary BaseKeyframe {
    double? offset = null;
    DOMString easing = "linear";
    CompositeOperation? composite = null;
};

[
    JSGenerateToJSObject
] dictionary BaseComputedKeyframe {
     double? offset = null;
     double computedOffset;
     DOMString easing = "linear";
     CompositeOperation? composite = null;
};
